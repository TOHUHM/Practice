#!/opt/puppetlabs/puppet/bin/ruby

require 'yaml'

def check_time
  now = Time.now.to_i
  if File::exist?('/etc/puppet_timestamp')
    begin
      file = File.open('/etc/puppet_timestamp','r+')
    rescue
      puts "CRITICAL: Puppet timestamp file /etc/puppet_timestamp is not readable. Make sure the nagios user is member of the puppet group"
      exit(2)
    end
    timestamp = file.read.to_i
    file.close
  else
    timestamp = now
  end
  diff = now - timestamp
  file = File.open('/etc/puppet_timestamp','w+')
  if diff >= 864000 #10 days
    file.write(now)
    file.close
    puts "OK: Ticket regeneration"
    exit(0)
  end
  file.write(timestamp)
  file.close
end

if File::exist?('/opt/puppetlabs/puppet/cache/state/agent_disabled.lock')
   check_time
   begin
     agent_disabled = YAML::load_file('/opt/puppetlabs/puppet/cache/state/agent_disabled.lock')
     puts "CRITICAL: Puppet agent disabled : #{agent_disabled['disabled_message']}"
   rescue
     puts "CRITICAL: Puppet agent disabled lock file /opt/puppetlabs/puppet/cache/state/agent_disabled.lock is not accessible. Make sure the nagios user is a member of the puppet group"
   end
   exit(2)
end

begin
  summary = YAML::load_file('/opt/puppetlabs/puppet/cache/state/last_run_summary.yaml')
rescue
  puts "CRITICAL: Puppet last run summary file /opt/puppetlabs/puppet/cache/state/last_run_summary.yaml does not exist, or is not readable. Make sure the nagios user is a member of the puppet group"
  exit(2)
end

last_run = summary['time']['last_run']
now = Time.now.to_i
out_of_sync_warning = 60 * 60
out_of_sync_critical = 120 * 60
difference = now - last_run

if difference >= out_of_sync_warning
  difference_minutes = difference / 60
  check_time
  if difference >= out_of_sync_critical
    puts "CRITICAL: The last puppet run was #{difference_minutes} minutes ago"
    exit(2)
  end
  puts "WARNING: The last puppet run was #{difference_minutes} minutes ago"
  exit(1)
else
  require 'puppet'
  begin
    report = YAML::load_file('/opt/puppetlabs/puppet/cache/state/last_run_report.yaml')
  rescue
    puts "CRITICAL: Puppet last run report file /opt/puppetlabs/puppet/cache/state/last_run_report.yaml does not exist, or is not readable. Make sure the nagios user is a member of the puppet group"
    exit(2)
  end
  report_time = report.time.to_i
  difference = now - report_time
  if difference >= out_of_sync_critical
    check_time
    difference_minutes = difference / 60
    puts "CRITICAL: The last puppet synchronisation was #{difference_minutes} minutes ago"
    exit(2)
  end
  begin
    modifications = YAML::load_file('/opt/puppetlabs/puppet/cache/state/modifications.yaml')
    file = File.open('/opt/puppetlabs/puppet/cache/state/modifications.yaml','r+')
  rescue
    modifications = {'number' => 0}
    begin
      file = File.new('/opt/puppetlabs/puppet/cache/state/modifications.yaml','w+')
    rescue
      puts "CRITICAL: Puppet modifications file /opt/puppetlabs/puppet/cache/state/modifications.yaml is not readable. Make sure the nagios user is member of the puppet group"
      exit(2)
    end
  end

  sources = Array.new
  report.logs.each do |log|
    if ([:err,:alert,:emerg,:crit].include? log.level)
      check_time
      puts "CRITICAL: Puppet failed ! #{log.source} #{log.message}"
      file.close
      exit(2)
    end
     if (log.level == :notice) and (log.source != 'Puppet')
       sources.push(log.source)
     end
  end
  file.write(YAML.dump({'number' => sources.count,'source' => sources}))
  file.close

  if (modifications['number'] > 0)
    sources.each do |source|
      if modifications['source'].include? source
        check_time
        puts "WARNING: repeat change detected : #{source}"
        exit(1)
      end
    end
  end
  File.delete('/etc/puppet_timestamp') if File.exist?('/etc/puppet_timestamp')
  puts "OK: No problems found"
  exit(0)
end
File.delete('/etc/puppet_timestamp') if File.exist?('/etc/puppet_timestamp')
File.delete('/opt/puppetlabs/puppet/cache/state/modifications.yaml') if File.exist?('/opt/puppetlabs/puppet/cache/state/modifications.yaml')
puts "OK: No problems found"
exit(0)
